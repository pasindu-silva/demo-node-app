pipeline {
    agent any

    environment {
        DOCKER_HUB_REPO = 'pasindusilvartc/demo-node-app-repo'
        SSH_CREDENTIALS_ID = 'demoapp-aws-ssh-credentials-id'
        EC2_HOST = '54.210.66.151'
        EC2_USERNAME = 'ubuntu'
        APP_NAME = 'demo-node-app'
    }
    
    parameters {
        string(name: 'GITHUB_RELEASE_TAG', defaultValue: '', description: 'Release tag of the build to deploy')
        choice(name: 'ENVIRONMENT_NAME', choices: ['dev', 'prod', 'qa'], description: 'Environment name for the deployment')
    }
    
    stages {
        stage('Deploy to EC2') {
            steps {
                sshagent(credentials: ["${SSH_CREDENTIALS_ID}"]) {
                    sh """
                    ssh -o StrictHostKeyChecking=no ${EC2_USERNAME}@${EC2_HOST} '
                    sudo docker pull ${DOCKER_HUB_REPO}:${GITHUB_RELEASE_TAG}
                    sudo docker stop ${APP_NAME}-${params.ENVIRONMENT_NAME} || true
                    sudo docker rm ${APP_NAME}-${params.ENVIRONMENT_NAME} || true
                    sudo docker run -d --name ${APP_NAME}-${params.ENVIRONMENT_NAME} -p 8080:8080 ${DOCKER_HUB_REPO}:${GITHUB_RELEASE_TAG} --env ENVIRONMENT_NAME=${params.ENVIRONMENT_NAME}
                    '
                    """
                }
            }
        }
    }
}
