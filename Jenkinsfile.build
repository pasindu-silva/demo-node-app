pipeline {
    agent any

    parameters {
        choice(name: 'ENVIRONMENT_NAME', choices: ['dev', 'prod', 'qa'], description: 'Select the environment that you want to build. This will take the branch associated with the environment name to build')
    }

    environment {
        DOCKER_HUB_REPO = 'pasindusilvartc/demo-node-app-repo'
        DOCKER_HUB_CREDENTIALS_ID = 'demoapp-dockerhub-credentials-id'
        BUILD_PIPELINE_NAME = 'demoapp-deploy-prod-pipeline'
        GITHUB_RELEASE_TAG = ""
        GITHUB_REPO = 'pasindu-silva/demo-node-app'
        GITHUB_CREDENTIALS_ID = 'demoapp-github-credentials-id'
    }

    stages {
        stage('Auto Trigger Param Test') {
            steps {
                script {
                    echo "Showing triggered param : ${params.ENVIRONMENT_NAME}"
                    error("Error throw for testing webhooks")
                }
            }
        }

        stage('Checkout') {
            steps {
                script {
                    if (env.BUILD_CAUSE == 'SCMTrigger') {
                        echo 'This build was triggered by a webhook (SCMTrigger)'
                        echo 'Can be used to trigger the developer branch'
                    } else {
                        echo 'This build was not triggered by a webhook'
                    }

                    echo "ENV Params: ${params.ENVIRONMENT_NAME}"

                    def branchName = "jenkins-flow-test"
                    // Checkout the repository because things like release tags need to be accessed later
                    checkout([$class: 'GitSCM',
                              branches: [[name: "*/${branchName}"]], // Check the tags for the branch main
                              doGenerateSubmoduleConfigurations: false,
                              extensions: [],
                              userRemoteConfigs: [[url: "https://github.com/${GITHUB_REPO}.git",
                                                   credentialsId: "${GITHUB_CREDENTIALS_ID}"]]
                    ])
                }
            }
        }
    }
}
