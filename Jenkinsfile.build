pipeline {
    agent any

    parameters {
        choice(name: 'ENVIRONMENT_NAME', choices: ['dev', 'prod', 'qa'], description: 'Select the environment that you want to build. This will take the branch associated with the environment name to build')
    }

    environment {
        DOCKER_HUB_REPO = 'pasindusilvartc/demo-node-app-repo'
        DOCKER_HUB_CREDENTIALS_ID = 'demoapp-dockerhub-credentials-id'
        BUILD_PIPELINE_NAME = 'demoapp-deploy-prod-pipeline'
        GITHUB_RELEASE_TAG = ""
        GITHUB_REPO = 'pasindu-silva/demo-node-app'
        GITHUB_CREDENTIALS_ID = 'demoapp-github-credentials-id'
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    def buildCauses = currentBuild.getBuildCauses()
                    echo "Build Causes: ${buildCauses}"

                    // Check the _class property for specific build causes
                    if (buildCauses.any { it._class == 'com.cloudbees.jenkins.GitHubPushCause' }) {
                        echo 'This build was triggered by a GitHub push.'
                    } else if (buildCauses.any { it._class == 'hudson.model.UserIdCause' }) {
                        echo 'This build was manually triggered by a user.'
                    } else {
                        echo 'This build was triggered by another cause.'
                    }

                    echo "ENV Params: ${params.ENVIRONMENT_NAME}"

                    def branchName = "jenkins-flow-test"
                    // Checkout the repository because things like release tags need to be accessed later
                    checkout([$class: 'GitSCM',
                              branches: [[name: "*/${branchName}"]], // Check the tags for the branch main
                              doGenerateSubmoduleConfigurations: false,
                              extensions: [],
                              userRemoteConfigs: [[url: "https://github.com/${GITHUB_REPO}.git",
                                                   credentialsId: "${GITHUB_CREDENTIALS_ID}"]]
                    ])
                }
            }
        }
    }
}
